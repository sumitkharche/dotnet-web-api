# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and DOTNET_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.x.x'               # set this to the .NET Core version to use
  DEV_Env: 'Development'
  PROD_Env: 'Production'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:

      # Checkout the repo
      - uses: actions/checkout@master

      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Run dotnet build and publish for Dev Env
      - name: dotnet build and publish for Dev Env
        working-directory: 'demo-web-api'
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o './published-app-${{env.DEV_Env}}' /p:EnvironmentName=${{env.DEV_Env}}

      # Publish artifact
      - name: Publish artifact for Dev Env
        uses: actions/upload-artifact@v2
        with:
          name: published-app-${{env.DEV_Env}}
          path: './demo-web-api/published-app-${{env.DEV_Env}}'
          
      # Run dotnet build and publish for PROD Env
      - name: dotnet build and publish for PROD Env
        working-directory: 'demo-web-api'
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o './published-app-${{env.PROD_Env}}' /p:EnvironmentName=${{env.PROD_Env}}

      # Publish artifact for PROD
      - name: Publish artifact for PROD Env
        uses: actions/upload-artifact@v2
        with:
          name: published-app-${{env.PROD_Env}}
          path: './demo-web-api/published-app-${{env.PROD_Env}}'

  deploy-dev:
    runs-on: 'ubuntu-latest'
    environment: 'dev'
    needs: build-and-publish
    steps:

      # Download published artifact
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: published-app-${{env.DEV_Env}}
          path: './published-app-${{env.DEV_Env}}'

      # Deploy to web app
      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: demodevwebapi
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: './published-app-${{env.DEV_Env}}'
          
  deploy-prod:
    runs-on: 'ubuntu-latest'
    environment: 'prod'
    needs: deploy-dev
    steps:

      # Download published artifact
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: published-app-${{env.PROD_Env}}
          path: './published-app-${{env.PROD_Env}}'

      # Deploy to web app
      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: demoprodwebapi
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: './published-app-${{env.PROD_Env}}'


